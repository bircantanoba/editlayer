//
// Grid
// --------------------------------------------------
// .my-element
//   +grid(3, 2rem, 1rem)
//
// Param $columns [amount of columns (1-99)]

@mixin grid($columns: 3, $horizontal-gap: 1rem, $vertical-gap: null)

  @if $vertical-gap == null
    $vertical-gap: $horizontal-gap

  @if type-of($columns) == number and unitless($columns)
    display: flex

    > *
      width: 100% / $columns

    @if $horizontal-gap != null and $horizontal-gap != 0
      margin-left: $horizontal-gap * -1

      > *
        padding-left: $horizontal-gap

    @if $vertical-gap != null and $vertical-gap != 0
      margin-bottom: $vertical-gap * -1

      > *
        padding-bottom: $vertical-gap



  // display: flex
  // // width: 100%
  //
  // // Horizontal gap
  // @if $horizontal-gap != null and $horizontal-gap != 0
  //   margin-left: $horizontal-gap * -1
  //
  //   > *
  //     padding-left: $horizontal-gap
  //
  // // Columns: compact
  // @if $columns == 'compact'
  //   display: inline-flex
  //
  // // // Columns: equal
  // // @if $columns == 'equal'
  // //   flex-wrap: nowrap
  // //
  // //   > *
  // //     flex-grow: 1 0 0
  //
  // // Columns: amount of columns
  // @if type-of($columns) == number and unitless($columns)
  //   flex-wrap: wrap
  //
  //   > *
  //     width: 100% / $columns
  //
  //
  // @if $columns != 'compact' and $columns != 'equal'
  //
  //   // Vertical gap
  //   @if $vertical-gap == null
  //     $vertical-gap: $horizontal-gap
  //
  //   @if $vertical-gap != null and $vertical-gap != 0
  //     margin-bottom: $vertical-gap * -1
  //     border: 2px solid red
  //
  //     > *
  //       padding-bottom: $vertical-gap
